<?
	//Using database from http://www.maxmind.com/app/geoip_country
	//http://www.maxmind.com/download/geoip/database/GeoIPCountryCSV.zip
	//Updated the 1:st of each month
	
	// Optimization: Avoids table lookup for localhost and LAN requests
	// Optimization: Country codes and country names in arrays
	
	//Requires a unsigned 32 bit IPv4 value, create one with IPv4_to_GeoIP($_SERVER['REMOTE_ADDR'])

	//this file is auto generated by admin_geoip.php, it defines $GEOIP_COUNTRY_NAMES and $GEOIP_COUNTRY_CODES arrays
	include_once('functions_geoip_cc.php');

	function IgnoredIPRange($ipu)
	{
		//These are ignored IP's, they dont belong to any country and cannot be used together with the geoip database.
		//List of ignored IP ranges are from: http://en.wikipedia.org/wiki/Classful_network, 'Special ranges' section
		if ($ipu <= 16777215) return true;																//0.0.0.0     - 0.255.255.255
		if (($ipu >= 167772160) && ($ipu <= 184549375)) return true;			//10.0.0.0    - 10.255.255.255
		if (($ipu >= 2130706433) && ($ipu <= 2147483647)) return true;		//127.0.0.0   - 127.255.255.255
		if (($ipu >= 2851995648) && ($ipu <= 2852061183)) return true;		//169.254.0.0 - 169.254.255.255
		if (($ipu >= 2886729728) && ($ipu <= 2887778303)) return true;		//172.16.0.0  - 172.31.255.255
		if (($ipu >= 3221225984) && ($ipu <= 3221226239)) return true;		//192.0.2.0   - 192.0.2.255
		if (($ipu >= 3227017984) && ($ipu <= 3227018239)) return true;		//192.88.99.0 - 192.88.99.255
 		if (($ipu >= 3232235521) && ($ipu <= 3232301055)) return true;		//192.168.0.1 - 192.168.255.255
		if (($ipu >= 3323068416) && ($ipu <= 3323199487)) return true;		//198.18.0.0  - 198.19.255.255
		if (($ipu >= 3758096384) && ($ipu <= 4026531839)) return true;		//224.0.0.0   - 239.255.255.255
		if ($ipu >= 4026531840) return true;															//240.0.0.0   - 255.255.255.255

		return false; //IP is not ignored
	}
	
	/* Takes a IPv4 address in the form 123.123.123.123 and returns a GeoIP address */
	function IPv4_to_GeoIP($ip)
	{
		if (is_numeric($ip)) return $ip;

		$iparr = explode('.', trim($ip));
		if (count($iparr) != 4) return 0;

		$ipnum = ($iparr[0]*16777216) + ($iparr[1]*65536) + ($iparr[2]*256) + $iparr[3];
		return $ipnum;
	}
	
	/* Takes a GeoIP address in the form 32bit unsigned integer and returns a IPv4 address */
	function GeoIP_to_IPv4($ip)
	{
		if (!is_numeric($ip)) return 0;
		settype($ip, 'float');

		$w = ($ip / 16777216) % 256;
		$x = ($ip / 65536   ) % 256;
		$y = ($ip / 256     ) % 256;
		$z = ($ip           ) % 256;

		if ($z < 0) $z+=256;

		return $w.'.'.$x.'.'.$y.'.'.$z;
	}

	function GeoIP_ci_to_Country($country_id)		//returns country name from country_id
	{
		if (!$country_id || !is_numeric($country_id)) return 'LAN';

		global $GEOIP_COUNTRY_NAMES;
		return $GEOIP_COUNTRY_NAMES[$country_id];
	}

	function GeoIP_ci_to_CountryShort($country_id)
	{
		if (!$country_id || !is_numeric($country_id)) return 'LAN';

		global $GEOIP_COUNTRY_CODES;
		return $GEOIP_COUNTRY_CODES[$country_id];
	}
	
	
	//Note: For speed, avoid using the functions below
	

	//returns 2 letter country code
	function getGeoIPCountryShort($ip)
	{
		global $geodb;

  	$ip = IPv4_to_GeoIP($ip);
  	if (IgnoredIPRange($ip)) return 'LAN';

		$sql  = 'SELECT ci FROM tblGeoIP WHERE '.$ip.' BETWEEN start AND end';
		$data = dbOneResultItem($geodb, $sql);
		
		return GeoIP_ci_to_CountryShort($data['ci']);
	}
	
	function getGeoIPCountry($geoip)
	{
		global $geodb;
		
		if (!is_numeric($geoip)) return false;

  	if (IgnoredIPRange($geoip)) return 'LAN';

		$sql  = 'SELECT ci FROM tblGeoIP WHERE '.$geoip.' BETWEEN start AND end';
		$data = dbOneResult($geodb, $sql);

		return GeoIP_ci_to_Country($data['ci']);
	}

	function getGeoIPCountryFlag($geoip)
	{
		global $geodb;

		if (!is_numeric($geoip)) return false;

  	if (IgnoredIPRange($geoip)) return '<img src="/flags/LAN.png" alt="LAN">';

		$sql  = 'SELECT ci FROM tblGeoIP WHERE '.$geoip.' BETWEEN start AND end';
		$data = dbOneResult($geodb, $sql);

		return showGeoIPCountryFlag($data['ci']);
	}

	function showGeoIPCountryFlag($country_id)
	{
		if (!is_numeric($country_id)) return false;
		
		$country_name = GeoIP_ci_to_Country($country_id);
		$country_cc = GeoIP_ci_to_CountryShort($country_id);
		return '<img src="/flags/'.$country_cc.'.png" width=16 height=11 alt="'.$country_name.' ('.$country_cc.')" title="'.$country_name.'">';
	}








	/* Does a city lookup from our own database of collected city locations

		the below functions use tblGeoIPCities, tblGeoIPCityNames	
		look up an ip at http://www.ripe.net/whois?searchtext=213.100.89.163

		find its ip range:
		inetnum:         213.100.0.0 - 213.100.127.255
		netname:         SE-SWIPNET-000403
		
		do visual route trace at:
		http://visualroute.visualware.com/
		
	*/
	function getGeoIPCity(&$db, $ip)
	{
		$ip = IPv4_to_GeoIP($ip);
		if (IgnoredIPRange($ip)) {
			$data['cityName'] = 'LAN';
			$data['cityId'] = 0;
			return $data;
		}

		$sql =
				'SELECT t2.* FROM tblGeoIPCities AS t1 '.
				'LEFT OUTER JOIN tblGeoIPCityNames AS t2 ON (t1.cityId=t2.cityId) '.
				'WHERE '.$ip.' BETWEEN start AND end';

		return dbOneResult($db, $sql);
	}

	function getGeoIPCityName(&$db, $ip)
	{
		$ip = IPv4_to_GeoIP($ip);
		if (IgnoredIPRange($ip)) return 'LAN';

		$sql =
				'SELECT t2.cityName FROM tblGeoIPCities AS t1 '.
				'INNER JOIN tblGeoIPCityNames AS t2 ON (t1.cityId=t2.cityId) '.
				'WHERE '.$ip.' BETWEEN start AND end';

		$city = utf8_encode(dbOneResultItem($db, $sql));
		
		if (!$city) return '<span class="msg_error">Unknown area</span>';
		return $city;
	}
	
	function addGeoIPCityRange(&$db, $start, $end, $cityName, $countryId = 0)
	{
		if (!is_numeric($start) || !is_numeric($end) || !is_numeric($countryId)) return false;
		$cityName = dbAddSlashes($db, $cityName);
		
		$sql = 'INSERT INTO tblGeoIPCityNames SET cityName="'.$cityName.'",countryId='.$countryId.',timeAdded='.time();
		dbQuery($db, $sql);
		
		$sql = 'INSERT INTO tblGeoIPCities SET start='.$start.',end='.$end.',cityId='.$db['insert_id'];
		dbQuery($db, $sql);

		return true;
	}
	
	function getGeoIPCities(&$db)
	{
		$sql =
			'SELECT t1.start,t1.end,t2.* FROM tblGeoIPCities AS t1 '.
			'LEFT OUTER JOIN tblGeoIPCityNames AS t2 ON (t1.cityId=t2.cityId) '.
			'ORDER BY t1.start ASC';
		
		return dbArray($db, $sql);
	}

?>