|based on forage.mac

#turbo 10

#event NeedPole "Your fishing pole broke!"
#event NeedPole "You can't fish without a fishing pole, go buy one."
#event NeedPole "You need to put your fishing pole in your primary hand."
#event OutOfBait "You can't fish without fishing bait, go buy some."

#define INNATE_CAMO_TIME	1500s
#define INI_FILE			fishing.ini

sub Main

	/declare UseCamo		int outer  1

	/echo Fishing script started

	/if (${Defined[Param0]}) {
		/if (${String[${Param0}].Equal[camo]}) {
			/varset UseCamo 1
			/echo # Innate Camouflage mode ON.
		}
	} else {
		|No parameters passed, defaulting to not using innate camo.
		/echo # Innate Camouflage mode OFF. (use '/mac forage camo' to turn it on)
		/varset UseCamo 0
	}


	/if ( ${UseCamo} == 1) {
		/declare CamoTimer timer

		/varset CamoTimer INNATE_CAMO_TIME

		/alt activate 80
		/delay 1s
	}

	:Fish

	/if ( ${UseCamo} == 1) {

		|If I've been hit, or if macro is running while I'm not afk, will refresh camo
		/if (!${Me.Invis} && !${Me.Casting.Name.Length} ) {
			/echo Eeep, im visible! Not a good sign!

			|fixme: check if i am being punched on, then exodus/gate.
			|fixme: check exodus location, check current location. tell player not to start script near exodus spot.
			
			|fixme: dont panic if i am currently casting a spell
			
			/if (${Me.AltAbilityReady["Innate Camouflage"]}) {
				/varset CamoTimer INNATE_CAMO_TIME
				/echo - Using Innate Camouflage
				/alt activate 80
			}
		}
		
		|If I'm actually AFK, will refresh invis
		/if ( ${CamoTimer} <=0 ) {
			/if (${Me.AltAbilityReady["Innate Camouflage"]}) {
				/varset CamoTimer INNATE_CAMO_TIME
				/echo - Using Innate Camouflage
				/alt activate 80
				/delay 1s
			}
		}
	}

	| If we can fish then do so.
	|${Me.Casting.Equal[NULL]}
	/if (${Me.AbilityReady[Fishing]} && !${Me.Moving}) {
	
		| Stand up. Can't fish while sitting.
		/if (!${Me.Standing}) /stand

		| If we successfully foraged something then take care of it.
		/if (${Cursor.ID}) {

			| Loop is to handle Nature's Bounty AA
			:LootIt
			|/echo -- Handling ${Cursor.Name}
			/call HandleItem
			/delay 1s
			/if (${Cursor.ID}) /goto :LootIt
		}

		/if (!${Cursor.ID}) {
			/doability fishing
		}
	}

	/delay 1s

	/goto :Fish

:Exit
/return


sub HandleItem

	/declare ItemSetting int local
	/declare ItemInZone int local
	/declare NotFound int local

	/varset NotFound -1

	| Look up item in ini
	/varset ItemSetting ${Ini[INI_FILE, FishingList, ${Cursor.Name}, ${NotFound}]}

	/delay 5

	| If the item isn't in the .ini file then add it.
	/if (${ItemSetting} == ${NotFound}) {

		/ini "INI_FILE" "FishingList" "${Cursor.Name}" "1"
		/varset ItemSetting 1
		/echo # New item: ${Cursor.Name}
	}

	|Look up item in zone section of INI
	/varset ItemInZone ${Ini[INI_FILE, ${Zone.Name}, ${Cursor.Name}_${Cursor.ID}, ${NotFound}]}
	/if (${ItemInZone} == ${NotFound}) {
		/echo New zone forage: ${Cursor.Name}
		| Set information about what zone this item can be foraged in
		/ini "INI_FILE" "${Zone.Name}" "${Cursor.Name}_${Cursor.ID}" "1"
	}
   

	| If we're keeping this item then stash it in our bags.
	| Otherwise, just destroy it.
	/if (${ItemSetting}==1) {

		/echo Saving ${Cursor.Name}
		/autoinventory

	} else {

		| This item is specified in .ini to be destroyed
		/if (${ItemSetting} == 0) {
			/echo Destroying ${Cursor.Name}
			/destroy
		} else {
			| this code should be unreachable because ItemSetting is set to 1 on new items
			/echo I have a unknown item on cursor (${Cursor.Name}), ending macro
			/endmacro
		}
	}

/return


sub Event_InvFull

	/echo Inventory is full!
	/endmacro

/return

Sub Event_NeedPole
   /cast item "Fisherman's Companion"
   /delay 11s
   /autoinventory
/return

Sub Event_OutOfBait
   /Echo Ran out of Bait.
   /camp
   /endmacro
/return