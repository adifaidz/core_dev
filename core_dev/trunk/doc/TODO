Autumn 2011 cleanup:


BUGS:
    * första skapade användaren blir INTE superadmin! plus efter create new first user form submit så blir det tom sida
    * later: fixa tvguide YuiAutocomplete användnign... genom att döda YuiAutocomplete och färdigställa Yui3Autocomplete (ersättaren)


Views:
    * reorganize:
        - move trunk/core/views to trunk/views
        - split to subdirs:
            views/admin
            views/core     = iview.php, coredev.php
            views/xxxx

    * drop/port all code from trunk/admin_old/


Authentication:
    * Verify that "forgot password" feature works (also verify that Token works, token also used in textfeed+tvguide)


UI:
    * look at jquery-ui
    * http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js
    * hover popup-box, to quickly show user info etc


User profile
    * show a AVATAR if no profile pic is selected
    * link to: chat 1-to-1
    * avability: available for chat?


User search
    * ...


Messages
    * ...


Privacy
    * ...


Friends
    later a proper Friend class with friend requests etc:
        - The "Bookmark" class cant be used, it is more like a "favourite users bookmarks"
        - write a proper Friend class using functions_contacts.php logic (1:send friend request, 2:approve, 3:both persons are friends)
        - write a "friend list" view (for Friend class)


Chat
    * write 1-on-1 chat code, store messages as normal Message objects
    * ability to LOCK/UNLOCK a chatroom from public use
    * ability to allow anon users in certain chatrooms


Moderation
    * ...


Guestbook (NOT USED IN RR)
    * ...


Photo albums: core/PhotoAlbum.php, core/views/albums.php
    * multiple file uploads with progress bars, see http://yuilibrary.com/yui/docs/uploader/uploader-multiple.html


DB CHECKER:
    * all classes that is 1-to-1 mapped to a db table should extend from a common class (SqlObject?)
    * do a checker that includes all core/*.php files and iterates over all known classes and finds
        those who extend from SqlObject, and does some special code to compare tbl structure vs class properties
    * add this to the coredev/selftest eventually (?) may be heavy operation; if so use a memcached variable to only do it once in a while?


ADMIN:
    * paginate "manage files" view in admin to 50 objects/page or something


---


BEFORE 1.0 (201?):

    * Login with Facebook:
        - ability to link a Facebook account with a regular account, so that the fb account acts as a child account,
            - always give privilegies to the regular "owner/main" account
        - ability to "login with facebook" and get logged in to the linked privilegied account
        - if using a linked account, show facebook info on user rendered link

    * make a script that updates tables to current structure by adding / renaming columns & changing datatypes from a description
    * identify core modules, write some docs
    * rewrite/finish/cleanup core modules: blog / news, users, forum, file uploading
    * all non-prepared sql should be removed & non-prepared DatabaseMysql methods removed
    * some infrastructure to handle scheduling of jobs?


rewrite/cleanup following modules:
    * function_forum.php      use same table to store messages?


replace icons with this icon set:
    http://p.yusukekamiyamane.com/ (creative commons 3.0 licence)
